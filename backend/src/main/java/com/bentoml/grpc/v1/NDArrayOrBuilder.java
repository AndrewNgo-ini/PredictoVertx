// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bentoml/grpc/v1/service.proto

package com.bentoml.grpc.v1;

public interface NDArrayOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bentoml.grpc.v1.NDArray)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * DTYPE is the data type of given array
   * </pre>
   *
   * <code>.bentoml.grpc.v1.NDArray.DType dtype = 1;</code>
   * @return The enum numeric value on the wire for dtype.
   */
  int getDtypeValue();
  /**
   * <pre>
   * DTYPE is the data type of given array
   * </pre>
   *
   * <code>.bentoml.grpc.v1.NDArray.DType dtype = 1;</code>
   * @return The dtype.
   */
  com.bentoml.grpc.v1.NDArray.DType getDtype();

  /**
   * <pre>
   * shape is the shape of given array.
   * </pre>
   *
   * <code>repeated int32 shape = 2;</code>
   * @return A list containing the shape.
   */
  java.util.List<java.lang.Integer> getShapeList();
  /**
   * <pre>
   * shape is the shape of given array.
   * </pre>
   *
   * <code>repeated int32 shape = 2;</code>
   * @return The count of shape.
   */
  int getShapeCount();
  /**
   * <pre>
   * shape is the shape of given array.
   * </pre>
   *
   * <code>repeated int32 shape = 2;</code>
   * @param index The index of the element to return.
   * @return The shape at the given index.
   */
  int getShape(int index);

  /**
   * <pre>
   * represents a string parameter value.
   * </pre>
   *
   * <code>repeated string string_values = 5;</code>
   * @return A list containing the stringValues.
   */
  java.util.List<java.lang.String>
      getStringValuesList();
  /**
   * <pre>
   * represents a string parameter value.
   * </pre>
   *
   * <code>repeated string string_values = 5;</code>
   * @return The count of stringValues.
   */
  int getStringValuesCount();
  /**
   * <pre>
   * represents a string parameter value.
   * </pre>
   *
   * <code>repeated string string_values = 5;</code>
   * @param index The index of the element to return.
   * @return The stringValues at the given index.
   */
  java.lang.String getStringValues(int index);
  /**
   * <pre>
   * represents a string parameter value.
   * </pre>
   *
   * <code>repeated string string_values = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the stringValues at the given index.
   */
  com.google.protobuf.ByteString
      getStringValuesBytes(int index);

  /**
   * <pre>
   * represents a float parameter value.
   * </pre>
   *
   * <code>repeated float float_values = 3 [packed = true];</code>
   * @return A list containing the floatValues.
   */
  java.util.List<java.lang.Float> getFloatValuesList();
  /**
   * <pre>
   * represents a float parameter value.
   * </pre>
   *
   * <code>repeated float float_values = 3 [packed = true];</code>
   * @return The count of floatValues.
   */
  int getFloatValuesCount();
  /**
   * <pre>
   * represents a float parameter value.
   * </pre>
   *
   * <code>repeated float float_values = 3 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The floatValues at the given index.
   */
  float getFloatValues(int index);

  /**
   * <pre>
   * represents a double parameter value.
   * </pre>
   *
   * <code>repeated double double_values = 4 [packed = true];</code>
   * @return A list containing the doubleValues.
   */
  java.util.List<java.lang.Double> getDoubleValuesList();
  /**
   * <pre>
   * represents a double parameter value.
   * </pre>
   *
   * <code>repeated double double_values = 4 [packed = true];</code>
   * @return The count of doubleValues.
   */
  int getDoubleValuesCount();
  /**
   * <pre>
   * represents a double parameter value.
   * </pre>
   *
   * <code>repeated double double_values = 4 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The doubleValues at the given index.
   */
  double getDoubleValues(int index);

  /**
   * <pre>
   * represents a bool parameter value.
   * </pre>
   *
   * <code>repeated bool bool_values = 6 [packed = true];</code>
   * @return A list containing the boolValues.
   */
  java.util.List<java.lang.Boolean> getBoolValuesList();
  /**
   * <pre>
   * represents a bool parameter value.
   * </pre>
   *
   * <code>repeated bool bool_values = 6 [packed = true];</code>
   * @return The count of boolValues.
   */
  int getBoolValuesCount();
  /**
   * <pre>
   * represents a bool parameter value.
   * </pre>
   *
   * <code>repeated bool bool_values = 6 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The boolValues at the given index.
   */
  boolean getBoolValues(int index);

  /**
   * <pre>
   * represents a int32 parameter value.
   * </pre>
   *
   * <code>repeated int32 int32_values = 7 [packed = true];</code>
   * @return A list containing the int32Values.
   */
  java.util.List<java.lang.Integer> getInt32ValuesList();
  /**
   * <pre>
   * represents a int32 parameter value.
   * </pre>
   *
   * <code>repeated int32 int32_values = 7 [packed = true];</code>
   * @return The count of int32Values.
   */
  int getInt32ValuesCount();
  /**
   * <pre>
   * represents a int32 parameter value.
   * </pre>
   *
   * <code>repeated int32 int32_values = 7 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The int32Values at the given index.
   */
  int getInt32Values(int index);

  /**
   * <pre>
   * represents a int64 parameter value.
   * </pre>
   *
   * <code>repeated int64 int64_values = 8 [packed = true];</code>
   * @return A list containing the int64Values.
   */
  java.util.List<java.lang.Long> getInt64ValuesList();
  /**
   * <pre>
   * represents a int64 parameter value.
   * </pre>
   *
   * <code>repeated int64 int64_values = 8 [packed = true];</code>
   * @return The count of int64Values.
   */
  int getInt64ValuesCount();
  /**
   * <pre>
   * represents a int64 parameter value.
   * </pre>
   *
   * <code>repeated int64 int64_values = 8 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The int64Values at the given index.
   */
  long getInt64Values(int index);

  /**
   * <pre>
   * represents a uint32 parameter value.
   * </pre>
   *
   * <code>repeated uint32 uint32_values = 9 [packed = true];</code>
   * @return A list containing the uint32Values.
   */
  java.util.List<java.lang.Integer> getUint32ValuesList();
  /**
   * <pre>
   * represents a uint32 parameter value.
   * </pre>
   *
   * <code>repeated uint32 uint32_values = 9 [packed = true];</code>
   * @return The count of uint32Values.
   */
  int getUint32ValuesCount();
  /**
   * <pre>
   * represents a uint32 parameter value.
   * </pre>
   *
   * <code>repeated uint32 uint32_values = 9 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The uint32Values at the given index.
   */
  int getUint32Values(int index);

  /**
   * <pre>
   * represents a uint64 parameter value.
   * </pre>
   *
   * <code>repeated uint64 uint64_values = 10 [packed = true];</code>
   * @return A list containing the uint64Values.
   */
  java.util.List<java.lang.Long> getUint64ValuesList();
  /**
   * <pre>
   * represents a uint64 parameter value.
   * </pre>
   *
   * <code>repeated uint64 uint64_values = 10 [packed = true];</code>
   * @return The count of uint64Values.
   */
  int getUint64ValuesCount();
  /**
   * <pre>
   * represents a uint64 parameter value.
   * </pre>
   *
   * <code>repeated uint64 uint64_values = 10 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The uint64Values at the given index.
   */
  long getUint64Values(int index);
}
